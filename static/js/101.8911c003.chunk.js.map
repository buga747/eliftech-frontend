{"version":3,"file":"static/js/101.8911c003.chunk.js","mappings":"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","sources":["pages/OrderPage/OrderPage.jsx","services/shopsApi.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { toast } from 'react-toastify';\nimport { addOrder } from 'services/shopsApi';\nimport styled from 'styled-components';\nimport { BsTrash } from 'react-icons/bs';\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst FormContainer = styled.div`\n  width: 50%;\n`;\n\nconst ItemContainer = styled.div`\n  width: 50%;\n`;\n\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst InputContainer = styled.div`\n  margin-bottom: 1rem;\n`;\n\nconst ButtonContainer = styled.div`\n  margin-top: 1rem;\n`;\n\nconst CartPage = ({ items }) => {\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    phone: '',\n    address: '',\n  });\n  const [shopId, setShopId] = useState('');\n\n  useEffect(() => {\n    if (items.length > 0) {\n      setShopId(items[0].shopId);\n    }\n  }, [items]);\n\n  const [cartItems, setCartItems] = useState(items);\n  const [totalPrice, setTotalPrice] = useState(0);\n\n  // Calculate the total price based on item quantities\n  useEffect(() => {\n    let total = 0;\n    cartItems.forEach(item => {\n      total += item.price * item.quantity;\n    });\n    setTotalPrice(total);\n  }, [cartItems]);\n\n  const handleQuantityChange = (itemId, quantity) => {\n    const updatedItems = cartItems.map(item => {\n      if (item._id === itemId) {\n        const total = item.price * quantity; // Calculate the total for the item\n        return {\n          ...item,\n          quantity,\n          total,\n        };\n      }\n      return item;\n    });\n    setCartItems(updatedItems);\n  };\n\n  const handleDeleteItem = itemId => {\n    const updatedItems = cartItems.filter(item => item._id !== itemId);\n    setCartItems(updatedItems);\n  };\n\n  // Handle form input changes\n  const handleInputChange = e => {\n    const { name, value } = e.target;\n    setFormData(prevData => ({\n      ...prevData,\n      [name]: value,\n    }));\n  };\n\n  // Handle form submission\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    const data = {\n      user: {\n        name: formData.name,\n        email: formData.email,\n        phone: formData.phone,\n        address: formData.address,\n      },\n      shopId: shopId,\n      items: cartItems.map(item => ({\n        name: item.title,\n        quantity: item.quantity,\n        price: item.price,\n      })),\n      totalPrice: totalPrice,\n      date: new Date().toISOString(),\n    };\n\n    try {\n      const response = await addOrder(data);\n      if (response) {\n        toast.success('Thank you for your order. Wait for the delivery');\n      }\n\n      setFormData({\n        name: '',\n        email: '',\n        phone: '',\n        address: '',\n      });\n      setCartItems([]);\n    } catch (error) {\n      console.error(error.message);\n      toast.error('Something wrong. Please try again later');\n    }\n  };\n\n  return (\n    <Container>\n      <FormContainer>\n        <h2>User Information</h2>\n        <Form onSubmit={handleSubmit}>\n          <InputContainer>\n            <label>Name:</label>\n            <input\n              type=\"text\"\n              name=\"name\"\n              value={formData.name}\n              onChange={handleInputChange}\n              required\n            />\n          </InputContainer>\n          <InputContainer>\n            <label>Email:</label>\n            <input\n              type=\"email\"\n              name=\"email\"\n              value={formData.email}\n              onChange={handleInputChange}\n              required\n            />\n          </InputContainer>\n          <InputContainer>\n            <label>Phone:</label>\n            <input\n              type=\"tel\"\n              name=\"phone\"\n              value={formData.phone}\n              onChange={handleInputChange}\n              required\n            />\n          </InputContainer>\n          <InputContainer>\n            <label>Address:</label>\n            <input\n              type=\"text\"\n              name=\"address\"\n              value={formData.address}\n              onChange={handleInputChange}\n              required\n            />\n          </InputContainer>\n          <ButtonContainer>\n            <button type=\"submit\">Submit</button>\n          </ButtonContainer>\n        </Form>\n      </FormContainer>\n      <ItemContainer>\n        <h2>Ordered Items</h2>\n        <ul>\n          {cartItems.map(item => (\n            <li key={item._id}>\n              <div>\n                <strong>{item.title}</strong>\n              </div>\n              <div>\n                Quantity:\n                <input\n                  type=\"number\"\n                  value={item.quantity}\n                  onChange={e =>\n                    handleQuantityChange(item._id, parseInt(e.target.value))\n                  }\n                  min=\"1\"\n                />\n              </div>\n              <div>Price: ${item.price}</div>\n              <div>Total: ${(item.quantity * item.price).toFixed(2)}</div>\n              <button onClick={() => handleDeleteItem(item._id)}>\n                {' '}\n                <BsTrash />\n              </button>\n            </li>\n          ))}\n        </ul>\n        <div>\n          <strong>Total Price: ${totalPrice.toFixed(2)}</strong>\n        </div>\n      </ItemContainer>\n    </Container>\n  );\n};\n\nexport default CartPage;\n","import axios from 'axios';\n\nconst BASE_URL = window.location.origin.includes('local')\n  ? 'http://localhost:3030/api/shops'\n  : 'https://delivery-shop-rfy2.onrender.com';\n\naxios.defaults.baseURL = BASE_URL;\n\naxios.defaults.baseURL = BASE_URL;\n\nexport async function fetchAllShops() {\n  const response = await axios.get(`/`);\n  return response.data;\n}\n\nexport async function addOrder(order) {\n  const { data } = await axios.post('/orders', order);\n  return data;\n}\n"],"names":["Container","styled","FormContainer","ItemContainer","Form","InputContainer","ButtonContainer","items","useState","name","email","phone","address","formData","setFormData","shopId","setShopId","useEffect","length","cartItems","setCartItems","totalPrice","setTotalPrice","total","forEach","item","price","quantity","handleInputChange","e","target","value","prevData","handleSubmit","preventDefault","data","user","map","title","date","Date","toISOString","addOrder","toast","console","error","message","onSubmit","type","onChange","required","itemId","updatedItems","_id","handleQuantityChange","parseInt","min","toFixed","onClick","filter","handleDeleteItem","BASE_URL","window","location","origin","includes","fetchAllShops","axios","response","order"],"sourceRoot":""}